package nz.net.dnh.evetool.hibernate.evetool;

// Generated 10/08/2011 3:49:46 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Rule generated by hbm2java
 */
@Entity
@Table(name = "Rule", catalog = "EVETool", uniqueConstraints = @UniqueConstraint(columnNames = {
		"RoleID", "ModuleID", "Type", "PermissionID" }))
public class Rule implements java.io.Serializable {

	private RuleId id;
	private Module module;
	private Role role;
	private Permission permission;
	private String type;

	public Rule() {
	}

	public Rule(RuleId id, Module module, Role role, String type) {
		this.id = id;
		this.module = module;
		this.role = role;
		this.type = type;
	}

	public Rule(RuleId id, Module module, Role role, Permission permission,
			String type) {
		this.id = id;
		this.module = module;
		this.role = role;
		this.permission = permission;
		this.type = type;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "roleId", column = @Column(name = "RoleID", nullable = false)),
			@AttributeOverride(name = "moduleId", column = @Column(name = "ModuleID", nullable = false)) })
	public RuleId getId() {
		return this.id;
	}

	public void setId(RuleId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ModuleID", nullable = false, insertable = false, updatable = false)
	public Module getModule() {
		return this.module;
	}

	public void setModule(Module module) {
		this.module = module;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RoleID", nullable = false, insertable = false, updatable = false)
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PermissionID")
	public Permission getPermission() {
		return this.permission;
	}

	public void setPermission(Permission permission) {
		this.permission = permission;
	}

	@Column(name = "Type", nullable = false, length = 6)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

}
